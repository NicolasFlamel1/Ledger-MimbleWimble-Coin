name: Build and perform unit and functional tests

on: [push, pull_request]

jobs:
  job_build_debug:
    name: Build debug
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-lite:latest

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Build Nano S MimbleWimble Coin app
        run: |
          make DEBUG=1 CURRENCY=mimblewimble_coin

      - name: Upload Nano S MimbleWimble Coin app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-mimblewimble-coin-nanos
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S MimbleWimble Coin floonet app
        run: |
          make DEBUG=1 CURRENCY=mimblewimble_coin_floonet

      - name: Upload Nano S MimbleWimble Coin floonet app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-mimblewimble-coin-floonet-nanos
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Grin app
        run: |
          make DEBUG=1 CURRENCY=grin

      - name: Upload Nano S Grin app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-grin-nanos
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Grin testnet app
        run: |
          make DEBUG=1 CURRENCY=grin_testnet

      - name: Upload Nano S Grin testnet app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-grin-testnet-nanos
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Epic Cash app
        run: |
          make DEBUG=1 CURRENCY=epic_cash

      - name: Upload Nano S Epic Cash app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-epic-cash-nanos
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Epic Cash floonet app
        run: |
          make DEBUG=1 CURRENCY=epic_cash_floonet

      - name: Upload Nano S Epic Cash floonet app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-epic-cash-floonet-nanos
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano X MimbleWimble Coin app
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOX_SDK CURRENCY=mimblewimble_coin

      - name: Upload Nano X MimbleWimble Coin app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-mimblewimble-coin-nanox
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano X MimbleWimble Coin floonet app
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOX_SDK CURRENCY=mimblewimble_coin_floonet

      - name: Upload Nano X MimbleWimble Coin floonet app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-mimblewimble-coin-floonet-nanox
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano X Grin app
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOX_SDK CURRENCY=grin

      - name: Upload Nano X Grin app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-grin-nanox
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano X Grin testnet app
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOX_SDK CURRENCY=grin_testnet

      - name: Upload Nano X Grin testnet app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-grin-testnet-nanox
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano X Epic Cash app
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOX_SDK CURRENCY=epic_cash

      - name: Upload Nano X Epic Cash app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-epic-cash-nanox
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano X Epic Cash floonet app
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOX_SDK CURRENCY=epic_cash_floonet

      - name: Upload Nano X Epic Cash floonet app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-epic-cash-floonet-nanox
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Plus MimbleWimble Coin app
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOSP_SDK CURRENCY=mimblewimble_coin

      - name: Upload Nano S Plus MimbleWimble Coin app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-mimblewimble-coin-nanosplus
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Plus MimbleWimble Coin floonet app
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOSP_SDK CURRENCY=mimblewimble_coin_floonet

      - name: Upload Nano S Plus MimbleWimble Coin floonet app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-mimblewimble-coin-floonet-nanosplus
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Plus Grin app
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOSP_SDK CURRENCY=grin

      - name: Upload Nano S Plus Grin app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-grin-nanosplus
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Plus Grin testnet app
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOSP_SDK CURRENCY=grin_testnet

      - name: Upload Nano S Plus Grin testnet app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-grin-testnet-nanosplus
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Plus Epic Cash app
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOSP_SDK CURRENCY=epic_cash

      - name: Upload Nano S Plus Epic Cash app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-epic-cash-nanosplus
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Plus Epic Cash floonet app
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOSP_SDK CURRENCY=epic_cash_floonet

      - name: Upload Nano S Plus Epic Cash floonet app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-epic-cash-floonet-nanosplus
          path: bin

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      # Stax debug build removed due to errors in Stax SDK
      #- name: Build Stax MimbleWimble Coin app
      #  run: |
      #    make DEBUG=1 BOLOS_SDK=$STAX_SDK CURRENCY=mimblewimble_coin
      #
      #- name: Upload Stax MimbleWimble Coin app
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: app-debug-mimblewimble-coin-stax
      #    path: bin
      #
      #- name: Cleanup the repository
      #  run: |
      #    git config --global --add safe.directory "$GITHUB_WORKSPACE"
      #    git clean -dxf
      #
      #- name: Build Stax MimbleWimble Coin floonet app
      #  run: |
      #    make DEBUG=1 BOLOS_SDK=$STAX_SDK CURRENCY=mimblewimble_coin_floonet
      #
      #- name: Upload Stax MimbleWimble Coin floonet app
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: app-debug-mimblewimble-coin-floonet-stax
      #    path: bin
      #
      #- name: Cleanup the repository
      #  run: |
      #    git config --global --add safe.directory "$GITHUB_WORKSPACE"
      #    git clean -dxf
      #
      #- name: Build Stax Grin app
      #  run: |
      #    make DEBUG=1 BOLOS_SDK=$STAX_SDK CURRENCY=grin
      #
      #- name: Upload Stax Grin app
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: app-debug-grin-stax
      #    path: bin
      #
      #- name: Cleanup the repository
      #  run: |
      #    git config --global --add safe.directory "$GITHUB_WORKSPACE"
      #    git clean -dxf
      #
      #- name: Build Stax Grin testnet app
      #  run: |
      #    make DEBUG=1 BOLOS_SDK=$STAX_SDK CURRENCY=grin_testnet
      #
      #- name: Upload Stax Grin testnet app
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: app-debug-grin-testnet-stax
      #    path: bin
      #
      #- name: Cleanup the repository
      #  run: |
      #    git config --global --add safe.directory "$GITHUB_WORKSPACE"
      #    git clean -dxf
      #
      #- name: Build Stax Epic Cash app
      #  run: |
      #    make DEBUG=1 BOLOS_SDK=$STAX_SDK CURRENCY=epic_cash
      #
      #- name: Upload Stax Epic Cash app
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: app-debug-epic-cash-stax
      #    path: bin
      #
      #- name: Cleanup the repository
      #  run: |
      #    git config --global --add safe.directory "$GITHUB_WORKSPACE"
      #    git clean -dxf
      #
      #- name: Build Stax Epic Cash floonet app
      #  run: |
      #    make DEBUG=1 BOLOS_SDK=$STAX_SDK CURRENCY=epic_cash_floonet
      #
      #- name: Upload Stax Epic Cash floonet app
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: app-debug-epic-cash-floonet-stax
      #    path: bin
      #
      #- name: Cleanup the repository
      #  run: |
      #    git config --global --add safe.directory "$GITHUB_WORKSPACE"
      #    git clean -dxf

  job_scan_build:
    name: Clang Static Analyzer
    needs: job_build_debug
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-lite:latest

    steps:
      - uses: actions/checkout@v3

      - name: Build Nano S MimbleWimble Coin app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default CURRENCY=mimblewimble_coin

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S MimbleWimble Coin floonet app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default CURRENCY=mimblewimble_coin_floonet

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Grin app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default CURRENCY=grin

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Grin testnet app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default CURRENCY=grin_testnet

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Epic Cash app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default CURRENCY=epic_cash

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Epic Cash floonet app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default CURRENCY=epic_cash_floonet

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano X MimbleWimble Coin app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$NANOX_SDK CURRENCY=mimblewimble_coin

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano X MimbleWimble Coin floonet app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$NANOX_SDK CURRENCY=mimblewimble_coin_floonet

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano X Grin app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$NANOX_SDK CURRENCY=grin

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano X Grin testnet app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$NANOX_SDK CURRENCY=grin_testnet

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano X Epic Cash app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$NANOX_SDK CURRENCY=epic_cash

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano X Epic Cash floonet app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$NANOX_SDK CURRENCY=epic_cash_floonet

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Plus MimbleWimble Coin app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$NANOSP_SDK CURRENCY=mimblewimble_coin

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Plus MimbleWimble Coin floonet app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$NANOSP_SDK CURRENCY=mimblewimble_coin_floonet

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Plus Grin app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$NANOSP_SDK CURRENCY=grin

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Plus Grin testnet app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$NANOSP_SDK CURRENCY=grin_testnet

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Plus Epic Cash app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$NANOSP_SDK CURRENCY=epic_cash

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      - name: Build Nano S Plus Epic Cash floonet app with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$NANOSP_SDK CURRENCY=epic_cash_floonet

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

      - name: Cleanup the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git clean -dxf

      # Stax Clang Static Analyzer build removed due to errors in Stax SDK
      #- name: Build Stax MimbleWimble Coin app with Clang Static Analyzer
      #  run: |
      #    scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$STAX_SDK CURRENCY=mimblewimble_coin
      #
      #- uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: scan-build
      #    path: scan-build
      #
      #- name: Cleanup the repository
      #  run: |
      #    git config --global --add safe.directory "$GITHUB_WORKSPACE"
      #    git clean -dxf
      #
      #- name: Build Stax MimbleWimble Coin floonet app with Clang Static Analyzer
      #  run: |
      #    scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$STAX_SDK CURRENCY=mimblewimble_coin_floonet
      #
      #- uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: scan-build
      #    path: scan-build
      #
      #- name: Cleanup the repository
      #  run: |
      #    git config --global --add safe.directory "$GITHUB_WORKSPACE"
      #    git clean -dxf
      #
      #- name: Build Stax Grin app with Clang Static Analyzer
      #  run: |
      #    scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$STAX_SDK CURRENCY=grin
      #
      #- uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: scan-build
      #    path: scan-build
      #
      #- name: Cleanup the repository
      #  run: |
      #    git config --global --add safe.directory "$GITHUB_WORKSPACE"
      #    git clean -dxf
      #
      #- name: Build Stax Grin testnet app with Clang Static Analyzer
      #  run: |
      #    scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$STAX_SDK CURRENCY=grin_testnet
      #
      #- uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: scan-build
      #    path: scan-build
      #
      #- name: Cleanup the repository
      #  run: |
      #    git config --global --add safe.directory "$GITHUB_WORKSPACE"
      #    git clean -dxf
      #
      #- name: Build Stax Epic Cash app with Clang Static Analyzer
      #  run: |
      #    scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$STAX_SDK CURRENCY=epic_cash
      #
      #- uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: scan-build
      #    path: scan-build
      #
      #- name: Cleanup the repository
      #  run: |
      #    git config --global --add safe.directory "$GITHUB_WORKSPACE"
      #    git clean -dxf
      #
      #- name: Build Stax Epic Cash floonet app with Clang Static Analyzer
      #  run: |
      #    scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default BOLOS_SDK=$STAX_SDK CURRENCY=epic_cash_floonet
      #
      #- uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: scan-build
      #    path: scan-build
      #
      #- name: Cleanup the repository
      #  run: |
      #    git config --global --add safe.directory "$GITHUB_WORKSPACE"
      #    git clean -dxf

  job_unit_test:
    name: Unit test
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-lite:latest

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          apk add --update-cache openssl-dev

      - name: Build unit tests
        run: |
          cmake -Btests/unit_tests/build -Htests/unit_tests/ && make -C tests/unit_tests/build/

      - name: Run unit tests
        run: |
          make -C tests/unit_tests/build test

  job_functional_test:
    name: Functional test
    needs: job_build_debug
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/speculos:latest
      options: --entrypoint /bin/bash

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          apt update -q && apt install -qy curl netcat-traditional nodejs npm
          npm i @ledgerhq/hw-transport-node-speculos

      - name: Download Nano S MimbleWimble Coin app
        uses: actions/download-artifact@v3
        with:
          name: app-debug-mimblewimble-coin-nanos
          path: bin-mimblewimble-coin-nanos

      - name: Run Speculos
        run: |
          /speculos/speculos.py --model nanos --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-mimblewimble-coin-nanos/app.elf 2>speculos.log &
          echo $! >/tmp/speculos.pid
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'

      - name: Run tests with Nano S MimbleWimble Coin app
        run: |
          node tests/functional_tests/main.js mimblewimble_coin speculos nanos

      - name: Upload Speculos log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: speculos-mimblewimble-coin-nanos-log
          path: speculos.log

      - name: Kill Speculos
        run: |
          kill -9 $(cat /tmp/speculos.pid)

      - name: Download Nano S MimbleWimble Coin floonet app
        uses: actions/download-artifact@v3
        with:
          name: app-debug-mimblewimble-coin-floonet-nanos
          path: bin-mimblewimble-coin-floonet-nanos

      - name: Run Speculos
        run: |
          /speculos/speculos.py --model nanos --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-mimblewimble-coin-floonet-nanos/app.elf 2>speculos.log &
          echo $! >/tmp/speculos.pid
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'

      - name: Run tests with Nano S MimbleWimble Coin floonet app
        run: |
          node tests/functional_tests/main.js mimblewimble_coin_floonet speculos nanos

      - name: Upload Speculos log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: speculos-mimblewimble-coin-floonet-nanos-log
          path: speculos.log

      - name: Kill Speculos
        run: |
          kill -9 $(cat /tmp/speculos.pid)

      - name: Download Nano S Grin app
        uses: actions/download-artifact@v3
        with:
          name: app-debug-grin-nanos
          path: bin-grin-nanos

      - name: Run Speculos
        run: |
          /speculos/speculos.py --model nanos --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-grin-nanos/app.elf 2>speculos.log &
          echo $! >/tmp/speculos.pid
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'

      - name: Run tests with Nano S Grin app
        run: |
          node tests/functional_tests/main.js grin speculos nanos

      - name: Upload Speculos log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: speculos-grin-nanos-log
          path: speculos.log

      - name: Kill Speculos
        run: |
          kill -9 $(cat /tmp/speculos.pid)

      - name: Download Nano S Grin testnet app
        uses: actions/download-artifact@v3
        with:
          name: app-debug-grin-testnet-nanos
          path: bin-grin-testnet-nanos

      - name: Run Speculos
        run: |
          /speculos/speculos.py --model nanos --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-grin-testnet-nanos/app.elf 2>speculos.log &
          echo $! >/tmp/speculos.pid
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'

      - name: Run tests with Nano S Grin testnet app
        run: |
          node tests/functional_tests/main.js grin_testnet speculos nanos

      - name: Upload Speculos log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: speculos-grin-testnet-nanos-log
          path: speculos.log

      - name: Kill Speculos
        run: |
          kill -9 $(cat /tmp/speculos.pid)

      - name: Download Nano S Epic Cash app
        uses: actions/download-artifact@v3
        with:
          name: app-debug-epic-cash-nanos
          path: bin-epic-cash-nanos

      - name: Run Speculos
        run: |
          /speculos/speculos.py --model nanos --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-epic-cash-nanos/app.elf 2>speculos.log &
          echo $! >/tmp/speculos.pid
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'

      - name: Run tests with Nano S Epic Cash app
        run: |
          node tests/functional_tests/main.js epic_cash speculos nanos

      - name: Upload Speculos log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: speculos-epic-cash-nanos-log
          path: speculos.log

      - name: Kill Speculos
        run: |
          kill -9 $(cat /tmp/speculos.pid)

      - name: Download Nano S Epic Cash floonet app
        uses: actions/download-artifact@v3
        with:
          name: app-debug-epic-cash-floonet-nanos
          path: bin-epic-cash-floonet-nanos

      - name: Run Speculos
        run: |
          /speculos/speculos.py --model nanos --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-epic-cash-floonet-nanos/app.elf 2>speculos.log &
          echo $! >/tmp/speculos.pid
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'

      - name: Run tests with Nano S Epic Cash floonet app
        run: |
          node tests/functional_tests/main.js epic_cash_floonet speculos nanos

      - name: Upload Speculos log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: speculos-epic-cash-floonet-nanos-log
          path: speculos.log

      - name: Kill Speculos
        run: |
          kill -9 $(cat /tmp/speculos.pid)

      # Nano X tests removed due to automation hanging on some tests
      #- name: Download Nano X MimbleWimble Coin app
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: app-debug-mimblewimble-coin-nanox
      #    path: bin-mimblewimble-coin-nanox
      #
      #- name: Run Speculos
      #  run: |
      #    /speculos/speculos.py --model nanox --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-mimblewimble-coin-nanox/app.elf 2>speculos.log &
      #    echo $! >/tmp/speculos.pid
      #    timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
      #
      #- name: Run tests with Nano X MimbleWimble Coin app
      #  run: |
      #    node tests/functional_tests/main.js mimblewimble_coin speculos nanox
      #
      #- name: Upload Speculos log
      #  uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: speculos-mimblewimble-coin-nanox-log
      #    path: speculos.log
      #
      #- name: Kill Speculos
      #  run: |
      #    kill -9 $(cat /tmp/speculos.pid)
      #
      #- name: Download Nano X MimbleWimble Coin floonet app
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: app-debug-mimblewimble-coin-floonet-nanox
      #    path: bin-mimblewimble-coin-floonet-nanox
      #
      #- name: Run Speculos
      #  run: |
      #    /speculos/speculos.py --model nanox --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-mimblewimble-coin-floonet-nanox/app.elf 2>speculos.log &
      #    echo $! >/tmp/speculos.pid
      #    timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
      #
      #- name: Run tests with Nano X MimbleWimble Coin floonet app
      #  run: |
      #    node tests/functional_tests/main.js mimblewimble_coin_floonet speculos nanox
      #
      #- name: Upload Speculos log
      #  uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: speculos-mimblewimble-coin-floonet-nanox-log
      #    path: speculos.log
      #
      #- name: Kill Speculos
      #  run: |
      #    kill -9 $(cat /tmp/speculos.pid)
      #
      #- name: Download Nano X Grin app
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: app-debug-grin-nanox
      #    path: bin-grin-nanox
      #
      #- name: Run Speculos
      #  run: |
      #    /speculos/speculos.py --model nanox --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-grin-nanox/app.elf 2>speculos.log &
      #    echo $! >/tmp/speculos.pid
      #    timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
      #
      #- name: Run tests with Nano X Grin app
      #  run: |
      #    node tests/functional_tests/main.js grin speculos nanox
      #
      #- name: Upload Speculos log
      #  uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: speculos-grin-nanox-log
      #    path: speculos.log
      #
      #- name: Kill Speculos
      #  run: |
      #    kill -9 $(cat /tmp/speculos.pid)
      #
      #- name: Download Nano X Grin testnet app
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: app-debug-grin-testnet-nanox
      #    path: bin-grin-testnet-nanox
      #
      #- name: Run Speculos
      #  run: |
      #    /speculos/speculos.py --model nanox --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-grin-testnet-nanox/app.elf 2>speculos.log &
      #    echo $! >/tmp/speculos.pid
      #    timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
      #
      #- name: Run tests with Nano X Grin testnet app
      #  run: |
      #    node tests/functional_tests/main.js grin_testnet speculos nanox
      #
      #- name: Upload Speculos log
      #  uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: speculos-grin-testnet-nanox-log
      #    path: speculos.log
      #
      #- name: Kill Speculos
      #  run: |
      #    kill -9 $(cat /tmp/speculos.pid)
      #
      #- name: Download Nano X Epic Cash app
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: app-debug-epic-cash-nanox
      #    path: bin-epic-cash-nanox
      #
      #- name: Run Speculos
      #  run: |
      #    /speculos/speculos.py --model nanox --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-epic-cash-nanox/app.elf 2>speculos.log &
      #    echo $! >/tmp/speculos.pid
      #    timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
      #
      #- name: Run tests with Nano X Epic Cash app
      #  run: |
      #    node tests/functional_tests/main.js epic_cash speculos nanox
      #
      #- name: Upload Speculos log
      #  uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: speculos-epic-cash-nanox-log
      #    path: speculos.log
      #
      #- name: Kill Speculos
      #  run: |
      #    kill -9 $(cat /tmp/speculos.pid)
      #
      #- name: Download Nano X Epic Cash floonet app
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: app-debug-epic-cash-floonet-nanox
      #    path: bin-epic-cash-floonet-nanox
      #
      #- name: Run Speculos
      #  run: |
      #    /speculos/speculos.py --model nanox --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-epic-cash-floonet-nanox/app.elf 2>speculos.log &
      #    echo $! >/tmp/speculos.pid
      #    timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
      #
      #- name: Run tests with Nano X Epic Cash floonet app
      #  run: |
      #    node tests/functional_tests/main.js epic_cash_floonet speculos nanox
      #
      #- name: Upload Speculos log
      #  uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: speculos-epic-cash-floonet-nanox-log
      #    path: speculos.log
      #
      #- name: Kill Speculos
      #  run: |
      #    kill -9 $(cat /tmp/speculos.pid)

      - name: Download Nano S Plus MimbleWimble Coin app
        uses: actions/download-artifact@v3
        with:
          name: app-debug-mimblewimble-coin-nanosplus
          path: bin-mimblewimble-coin-nanosplus

      - name: Run Speculos
        run: |
          /speculos/speculos.py --model nanosp --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-mimblewimble-coin-nanosplus/app.elf 2>speculos.log &
          echo $! >/tmp/speculos.pid
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'

      - name: Run tests with Nano S Plus MimbleWimble Coin app
        run: |
          node tests/functional_tests/main.js mimblewimble_coin speculos nanosp

      - name: Upload Speculos log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: speculos-mimblewimble-coin-nanosplus-log
          path: speculos.log

      - name: Kill Speculos
        run: |
          kill -9 $(cat /tmp/speculos.pid)

      - name: Download Nano S Plus MimbleWimble Coin floonet app
        uses: actions/download-artifact@v3
        with:
          name: app-debug-mimblewimble-coin-floonet-nanosplus
          path: bin-mimblewimble-coin-floonet-nanosplus

      - name: Run Speculos
        run: |
          /speculos/speculos.py --model nanosp --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-mimblewimble-coin-floonet-nanosplus/app.elf 2>speculos.log &
          echo $! >/tmp/speculos.pid
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'

      - name: Run tests with Nano S Plus MimbleWimble Coin floonet app
        run: |
          node tests/functional_tests/main.js mimblewimble_coin_floonet speculos nanosp

      - name: Upload Speculos log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: speculos-mimblewimble-coin-floonet-nanosplus-log
          path: speculos.log

      - name: Kill Speculos
        run: |
          kill -9 $(cat /tmp/speculos.pid)

      - name: Download Nano S Plus Grin app
        uses: actions/download-artifact@v3
        with:
          name: app-debug-grin-nanosplus
          path: bin-grin-nanosplus

      - name: Run Speculos
        run: |
          /speculos/speculos.py --model nanosp --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-grin-nanosplus/app.elf 2>speculos.log &
          echo $! >/tmp/speculos.pid
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'

      - name: Run tests with Nano S Plus Grin app
        run: |
          node tests/functional_tests/main.js grin speculos nanosp

      - name: Upload Speculos log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: speculos-grin-nanosplus-log
          path: speculos.log

      - name: Kill Speculos
        run: |
          kill -9 $(cat /tmp/speculos.pid)

      - name: Download Nano S Plus Grin testnet app
        uses: actions/download-artifact@v3
        with:
          name: app-debug-grin-testnet-nanosplus
          path: bin-grin-testnet-nanosplus

      - name: Run Speculos
        run: |
          /speculos/speculos.py --model nanosp --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-grin-testnet-nanosplus/app.elf 2>speculos.log &
          echo $! >/tmp/speculos.pid
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'

      - name: Run tests with Nano S Plus Grin testnet app
        run: |
          node tests/functional_tests/main.js grin_testnet speculos nanosp

      - name: Upload Speculos log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: speculos-grin-testnet-nanosplus-log
          path: speculos.log

      - name: Kill Speculos
        run: |
          kill -9 $(cat /tmp/speculos.pid)

      - name: Download Nano S Plus Epic Cash app
        uses: actions/download-artifact@v3
        with:
          name: app-debug-epic-cash-nanosplus
          path: bin-epic-cash-nanosplus

      - name: Run Speculos
        run: |
          /speculos/speculos.py --model nanosp --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-epic-cash-nanosplus/app.elf 2>speculos.log &
          echo $! >/tmp/speculos.pid
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'

      - name: Run tests with Nano S Plus Epic Cash app
        run: |
          node tests/functional_tests/main.js epic_cash speculos nanosp

      - name: Upload Speculos log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: speculos-epic-cash-nanosplus-log
          path: speculos.log

      - name: Kill Speculos
        run: |
          kill -9 $(cat /tmp/speculos.pid)

      - name: Download Nano S Plus Epic Cash floonet app
        uses: actions/download-artifact@v3
        with:
          name: app-debug-epic-cash-floonet-nanosplus
          path: bin-epic-cash-floonet-nanosplus

      - name: Run Speculos
        run: |
          /speculos/speculos.py --model nanosp --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-epic-cash-floonet-nanosplus/app.elf 2>speculos.log &
          echo $! >/tmp/speculos.pid
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'

      - name: Run tests with Nano S Plus Epic Cash floonet app
        run: |
          node tests/functional_tests/main.js epic_cash_floonet speculos nanosp

      - name: Upload Speculos log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: speculos-epic-cash-floonet-nanosplus-log
          path: speculos.log

      - name: Kill Speculos
        run: |
          kill -9 $(cat /tmp/speculos.pid)

      # Stax tests removed due to automation hanging on some tests
      #- name: Download Stax MimbleWimble Coin app
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: app-debug-mimblewimble-coin-stax
      #    path: bin-mimblewimble-coin-stax
      #
      #- name: Run Speculos
      #  run: |
      #    /speculos/speculos.py --model stax --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-mimblewimble-coin-stax/app.elf 2>speculos.log &
      #    echo $! >/tmp/speculos.pid
      #    timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
      #
      #- name: Run tests with Stax MimbleWimble Coin app
      #  run: |
      #    node tests/functional_tests/main.js mimblewimble_coin speculos stax
      #
      #- name: Upload Speculos log
      #  uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: speculos-mimblewimble-coin-stax-log
      #    path: speculos.log
      #
      #- name: Kill Speculos
      #  run: |
      #    kill -9 $(cat /tmp/speculos.pid)
      #
      #- name: Download Stax MimbleWimble Coin floonet app
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: app-debug-mimblewimble-coin-floonet-stax
      #    path: bin-mimblewimble-coin-floonet-stax
      #
      #- name: Run Speculos
      #  run: |
      #    /speculos/speculos.py --model stax --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-mimblewimble-coin-floonet-stax/app.elf 2>speculos.log &
      #    echo $! >/tmp/speculos.pid
      #    timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
      #
      #- name: Run tests with Stax MimbleWimble Coin floonet app
      #  run: |
      #    node tests/functional_tests/main.js mimblewimble_coin_floonet speculos stax
      #
      #- name: Upload Speculos log
      #  uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: speculos-mimblewimble-coin-floonet-stax-log
      #    path: speculos.log
      #
      #- name: Kill Speculos
      #  run: |
      #    kill -9 $(cat /tmp/speculos.pid)
      #
      #- name: Download Stax Grin app
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: app-debug-grin-stax
      #    path: bin-grin-stax
      #
      #- name: Run Speculos
      #  run: |
      #    /speculos/speculos.py --model stax --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-grin-stax/app.elf 2>speculos.log &
      #    echo $! >/tmp/speculos.pid
      #    timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
      #
      #- name: Run tests with Stax Grin app
      #  run: |
      #    node tests/functional_tests/main.js grin speculos stax
      #
      #- name: Upload Speculos log
      #  uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: speculos-grin-stax-log
      #    path: speculos.log
      #
      #- name: Kill Speculos
      #  run: |
      #    kill -9 $(cat /tmp/speculos.pid)
      #
      #- name: Download Stax Grin testnet app
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: app-debug-grin-testnet-stax
      #    path: bin-grin-testnet-stax
      #
      #- name: Run Speculos
      #  run: |
      #    /speculos/speculos.py --model stax --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-grin-testnet-stax/app.elf 2>speculos.log &
      #    echo $! >/tmp/speculos.pid
      #    timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
      #
      #- name: Run tests with Stax Grin testnet app
      #  run: |
      #    node tests/functional_tests/main.js grin_testnet speculos stax
      #
      #- name: Upload Speculos log
      #  uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: speculos-grin-testnet-stax-log
      #    path: speculos.log
      #
      #- name: Kill Speculos
      #  run: |
      #    kill -9 $(cat /tmp/speculos.pid)
      #
      #- name: Download Stax Epic Cash app
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: app-debug-epic-cash-stax
      #    path: bin-epic-cash-stax
      #
      #- name: Run Speculos
      #  run: |
      #    /speculos/speculos.py --model stax --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-epic-cash-stax/app.elf 2>speculos.log &
      #    echo $! >/tmp/speculos.pid
      #    timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
      #
      #- name: Run tests with Stax Epic Cash app
      #  run: |
      #    node tests/functional_tests/main.js epic_cash speculos stax
      #
      #- name: Upload Speculos log
      #  uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: speculos-epic-cash-stax-log
      #    path: speculos.log
      #
      #- name: Kill Speculos
      #  run: |
      #    kill -9 $(cat /tmp/speculos.pid)
      #
      #- name: Download Stax Epic Cash floonet app
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: app-debug-epic-cash-floonet-stax
      #    path: bin-epic-cash-floonet-stax
      #
      #- name: Run Speculos
      #  run: |
      #    /speculos/speculos.py --model stax --display headless --seed "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about" bin-epic-cash-floonet-stax/app.elf 2>speculos.log &
      #    echo $! >/tmp/speculos.pid
      #    timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
      #
      #- name: Run tests with Stax Epic Cash floonet app
      #  run: |
      #    node tests/functional_tests/main.js epic_cash_floonet speculos stax
      #
      #- name: Upload Speculos log
      #  uses: actions/upload-artifact@v3
      #  if: failure()
      #  with:
      #    name: speculos-epic-cash-floonet-stax-log
      #    path: speculos.log
      #
      #- name: Kill Speculos
      #  run: |
      #    kill -9 $(cat /tmp/speculos.pid)
